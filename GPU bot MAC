from twilio.rest import Client
from twilio.base.exceptions import TwilioRestException
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.select import Select
from selenium.common.exceptions import NoSuchElementException, ElementNotInteractableException, TimeoutException, \
    WebDriverException, ElementClickInterceptedException
from selenium.webdriver.common.proxy import Proxy, ProxyType
import info
import os
#NOTES------------------------------
#1. Before start uncomment the enable text message function
#2. uncomment the place order
#proxy------------------------------

#proxy = Proxy()
#proxy.proxy_type = ProxyType.MANUAL
#proxy.http_proxy = proxy_ip_port
#proxy.ssl_proxy = proxy_ip_port

#capabilities = webdriver.DesiredCapabilities.Chrome
#proxy.add_to_capabilities(capabilities)
#Twilio INFO------------------------
toNumber = '+17816262856'
fromNumber = '+17692106190'
accountSid = 'ACCOUNT SID'
authToken = 'AUTH TOKEN'
client = Client(accountSid, authToken)

#bot--------------------------------
import time
PATH = "/usr/local/bin/chromedriver"

driver = webdriver.Chrome(PATH)
#-------------------------------------
Test = False
TESTITEM= 'https://www.bestbuy.com/site/amd-ryzen-7-5800x-4th-gen-8-core-16-threads-unlocked-desktop-processor-without-cooler/6439000.p?skuId=6439000'#$3.79
G3060= "https://www.bestbuy.com/site/nvidia-geforce-rtx-3060-ti-8gb-gddr6-pci-express-4-0-graphics-card-steel-and-black/6439402.p?skuId=6439402" #$399.99
G3070= "https://www.bestbuy.com/site/nvidia-geforce-rtx-3070-8gb-gddr6-pci-express-4-0-graphics-card-dark-platinum-and-black/6429442.p?skuId=6429442"
G3070Ti= "https://www.bestbuy.com/site/nvidia-geforce-rtx-3070-ti-8gb-gddr6x-pci-express-4-0-graphics-card-dark-platinum-and-black/6465789.p?skuId=6465789" #599.99
G3080= "https://www.bestbuy.com/site/nvidia-geforce-rtx-3080-10gb-gddr6x-pci-express-4-0-graphics-card-titanium-and-black/6429440.p?skuId=6429440" #699.99
driver.get(TESTITEM)

isComplete = False

while not isComplete:
    # find add to cart button
    try:
        atcBtn = WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.CSS_SELECTOR, ".add-to-cart-button"))
        )
    except:
        driver.refresh()
        continue



    print("Add to cart button found")

#TEXT MESSAGE NOTIFICATION
 #   try:
 #       client.messages.create(to=toNumber, from_=fromNumber,
#                             body=f'ITEM INSTOCK! {TESTITEM}')
  #      print("Message sent")
 #   except (NameError, TwilioRestException):
  #      pass

    try:
        # add to cart
        atcBtn.click()

        time.sleep(5)
        driver.refresh()
        time.sleep(5)


        while True:
            try:
                add_to_cart = driver.find_element_by_css_selector(".add-to-cart-button")
                please_wait_enabled = add_to_cart.get_attribute('aria-describedby')

                if please_wait_enabled:
                    driver.refresh()
                    time.sleep(15)
                else:  # When Add to Cart appears. This will click button.
                    print("Add To Cart Button Clicked A Second Time.\n")
                    atcBtn = WebDriverWait(driver, 5).until(
                        EC.element_to_be_clickable((By.CSS_SELECTOR, ".add-to-cart-button")))
                    time.sleep(2)
                    atcBtn.click()
                    time.sleep(2)
                    break
            except(NoSuchElementException, TimeoutException) as error:
                print(f'Queue System Refresh Error: ${error}')




        # go to cart and begin checkout as guest---------------------------------------------
       # driver.get("https://www.bestbuy.com/cart")

       # checkoutBtn = WebDriverWait(driver, 10).until(
       #     EC.presence_of_element_located((By.CLASS_NAME, "checkout-buttons__checkout"))
        #)
       # checkoutBtn.click()
        print("Successfully added to cart - beginning check out")

        # account sign in ---------------------------------------------------------------
        # signInBtn = WebDriverWait(driver, 10).until(
        #   EC.presence_of_element_located((By.CLASS_NAME, "cia-form__controls "))
        # )
        # signInBtn.click()
        # print("Signing in")

        driver.get("https://www.bestbuy.com/checkout/r/fast-track")

        # fill in email and password---------------------------------------------------------
        emailField = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.ID, "user.emailAddress"))
        )
        emailField.send_keys(info.email)

        pField = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.ID, "user.phone"))
        )
        pField.send_keys(info.phone)

        # enabling text updates--------------------------------------------------------------
        textUpdate = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.ID, "text-updates"))
       )
        textUpdate.click()
        print("Text updates enabled")

        # click continue to payment information button---------------------------------------
        contBtn = WebDriverWait(driver, 10).until(
           EC.presence_of_element_located((By.CLASS_NAME, "button--continue "))
         )
        contBtn.click()
        print("Continuing to Payment information page")

        #payment information------------------------------------------------------------------

        paymentInfo = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.ID, "optimized-cc-card-number"))
        )
        paymentInfo.send_keys(info.card)

        mm = driver.find_element_by_name("expiration-month")
        mmDate = Select(mm)
        mmDate.select_by_index(3)

        yy= driver.find_element_by_name("expiration-year")
        yyDate = Select(yy)
        yyDate.select_by_index(3)

        cvvInfo = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.ID, "credit-card-cvv"))
        )
        cvvInfo.send_keys(info.cvv)

        #billing address---------------------------------------------------------------------

        fName = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.ID, "payment.billingAddress.firstName"))
        )
        fName.send_keys(info.fname)

        lName = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.ID, "payment.billingAddress.lastName"))
        )
        lName.send_keys(info.lname)

        autosugg = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.CLASS_NAME, "autocomplete__toggle"))
        )
        autosugg.click()

        addy = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.ID, "payment.billingAddress.street"))
        )
        addy.send_keys(info.addy)

        city = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.ID, "payment.billingAddress.city"))
        )
        city.send_keys(info.city)

        state = driver.find_element_by_name("state")
        caState = Select(state)
        caState.select_by_index(9)

        zip = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.ID, "payment.billingAddress.zipcode"))
        )
        zip.send_keys(info.zip)



        # place order-----------------------------------------------------------------------
        placeOrderBtn = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.CLASS_NAME, "payment__order-summary "))
        )
        #placeOrderBtn.click()
        print("Attempting order placement")

        isComplete = True
    except:
        # make sure this link is the same as the link passed to driver.get() before looping
        driver.get(TESTITEM)
        print("Error - restarting bot")
        continue

print("Order successfully placed")
